# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRKOr9Dio6jxgZgSDRuWSU68hRgjC8BC
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import pickle
import re

# Load dataset
df = pd.read_csv("/content/Bengaluru_House_Data.csv")

# Drop NA and irrelevant columns
df = df.drop(['area_type', 'society', 'balcony', 'availability'], axis=1)
df = df.dropna()

# Feature engineering
df['bhk'] = df['size'].apply(lambda x: int(x.split(' ')[0]))
# Modified to handle different units and non-numeric characters
def convert_sqft_to_float(x):
    try:
        tokens = x.split('-')
        if len(tokens) == 2:
            return (float(tokens[0]) + float(tokens[1])) / 2
        try:
            return float(re.findall(r'\d+\.?\d*', x)[0])
        except:
            return None
    except:
        return None

df['total_sqft'] = df['total_sqft'].apply(convert_sqft_to_float)
df = df.dropna(subset=['total_sqft'])


df = df[~(df['total_sqft']/df['bhk'] < 300)]

# One-hot encoding
dummies = pd.get_dummies(df['location'], drop_first=True)
df = pd.concat([df.drop('location', axis=1), dummies], axis=1)

# Drop the 'size' column before splitting into X and y
df = df.drop('size', axis=1)

# X and y
X = df.drop(['price'], axis=1)
y = df['price']

# Train test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = LinearRegression()
model.fit(X_train, y_train)

# Save model
with open('model.pkl', 'wb') as f:
    pickle.dump(model, f)